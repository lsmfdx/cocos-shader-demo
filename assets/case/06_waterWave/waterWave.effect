// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: unlit-vs
      frag: unlit-fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        mainTexture: { value: white }
        map: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram unlit-vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram unlit-fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
    in vec2 v_uv0;
    uniform sampler2D mainTexture;
    uniform sampler2D map;
  #endif

  uniform FragConstants {
    float u_time;
    
  };

  void main()
  {
    vec4 t_map = texture2D(map, fract(v_uv0 + u_time));
    float ofunlit-fset = t_map.g;
    float scaleX = 0.02;
    float scaleY = 0.02;

    vec2 uv = vec2(
      v_uv0.x + ofunlit-fset * scaleX,
      v_uv0.y + ofunlit-fset * scaleY
    );

    vec4 t_image = texture2D(mainTexture, uv);

    gl_FragColor = t_image;
  }
}%
